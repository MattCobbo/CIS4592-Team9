{"ast":null,"code":"import axios from 'axios';\nimport { SERVER_URL } from '../constants/constants';\nconst BASE_URL = SERVER_URL;\nconst api = axios.create({\n  baseURL: BASE_URL,\n  withCredentials: true\n});\n\n//If login credentials timeout while active, call new refresh_token\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const original_request = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !original_request._retry) {\n    original_request._retry = true;\n    try {\n      await refresh_token();\n      return api(original_request);\n    } catch (refreshError) {\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport const get_user_profile_data = async username => {\n  const response = await api.get(`/user_data/${username}/`);\n  return response.data;\n};\nconst refresh_token = async () => {\n  const response = await api.post('/token/refresh/');\n  return response.data;\n};\nexport const login = async (username, password) => {\n  const response = await api.post('/token/', {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const register = async (username, email, firstName, lastName, password) => {\n  const response = await api.post('/register/', {\n    username: username,\n    email: email,\n    first_name: firstName,\n    last_name: lastName,\n    password: password\n  });\n  return response.data;\n};\nexport const get_auth = async () => {\n  const response = await api.get(`/authenticated/`);\n  return response.data;\n};\nexport const toggleFollow = async username => {\n  const response = await api.post('/toggle_follow/', {\n    username: username\n  });\n  return response.data;\n};\nexport const get_users_posts = async username => {\n  const response = await api.get(`/posts/${username}/`);\n  return response.data;\n};\nexport const toggleLike = async id => {\n  const response = await api.post('/toggleLike/', {\n    id: id\n  });\n  return response.data;\n};\nexport const create_post = async description => {\n  const response = await api.post('/create_post/', {\n    description\n  });\n};","map":{"version":3,"names":["axios","SERVER_URL","BASE_URL","api","create","baseURL","withCredentials","interceptors","response","use","error","_error$response","original_request","config","status","_retry","refresh_token","refreshError","window","location","href","Promise","reject","get_user_profile_data","username","get","data","post","login","password","register","email","firstName","lastName","first_name","last_name","get_auth","toggleFollow","get_users_posts","toggleLike","id","create_post","description"],"sources":["C:/Users/Matt/OneDrive/Documents/Udemy/CapstoneProject/frontend/src/api/endpoints.js"],"sourcesContent":["import axios from 'axios'\r\nimport { SERVER_URL } from '../constants/constants'\r\n\r\nconst BASE_URL = SERVER_URL\r\n\r\nconst api = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true\r\n})\r\n\r\n//If login credentials timeout while active, call new refresh_token\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    async error => {\r\n        const original_request = error.config\r\n\r\n        if (error.response?.status === 401 && !original_request._retry) {\r\n            original_request._retry = true;\r\n\r\n            try {\r\n                await refresh_token();\r\n                return api(original_request);\r\n            } catch (refreshError) {\r\n                window.location.href = '/login'\r\n                return Promise.reject(refreshError)\r\n            }\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const get_user_profile_data = async (username) => {\r\n    const response = await api.get(`/user_data/${username}/`);\r\n    return response.data\r\n}\r\n\r\nconst refresh_token = async () => {\r\n    const response = await api.post('/token/refresh/');\r\n    return response.data\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n    const response = await api.post('/token/', { username, password });\r\n    return response.data\r\n}\r\n\r\nexport const register = async (username, email, firstName, lastName, password) => {\r\n    const response = await api.post('/register/', { username:username, email:email, first_name:firstName, last_name:lastName, password:password });\r\n    return response.data\r\n}\r\n\r\nexport const get_auth = async () => {\r\n    const response = await api.get(`/authenticated/`);\r\n    return response.data\r\n}\r\n\r\nexport const toggleFollow = async (username) => {\r\n    const response = await api.post('/toggle_follow/', { username:username});\r\n    return response.data\r\n}\r\n\r\nexport const get_users_posts = async (username) => {\r\n    const response = await api.get(`/posts/${username}/`);\r\n    return response.data\r\n}\r\n\r\nexport const toggleLike = async (id) => {\r\n    const response = await api.post('/toggleLike/', {id:id})\r\n    return response.data\r\n}\r\n\r\nexport const create_post = async(description) => {\r\n    const response = await api.post('/create_post/', {description})\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}